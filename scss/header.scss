// (c) Yuoa
// NOTE don't put "transition" property in %controlable!
// NOTE don't use "transition" property on basic layout!
// NOTE Writing order
//        1. @extend, @include (without reactives/responsibles), basic styles
//        2. @mixin / %extend / &states / &pseudo
//        3. tags / ids / classes / &tags / &ids / &classes
//        4. @include (reactives/responsibles)

@import 'common';

// Variables - Overall
$width: 100%;
$height: 420px;

// Variables - Controlable
$control-height: 80px;
$float-height: 70px;
$float-padding: 10px;

// Variables - Buttonbox
$button-width: 36px;
$button-box-width: $button-width * 4;
$button-each-width: $button-width - 1px;

$button-radius-range: 1.3;
$button-font-size: 1rem;

// Variables - Navigator
$menu-vertical-padding: .5vw;
$menu-padding: 1vw;
$menu-font-size: 1.3rem;

$menu-inner-padding: 1.25vw;
$menu-inner-font-size: 1rem;

// Mixins
@mixin above { position: absolute; z-index: 20; }
@mixin below { position: absolute; z-index: 10; }
@mixin full { width: $width; height: $height; }
@mixin vt-power ($property, $default, $fixed: 0, $calc: false) {
    @include power ($property, $default, 0.5, 0.6, 0.7, 0.8, 0.9, $fixed: $fixed, $calc: $calc);
}

// Animations
@keyframes fade-in-header { from { opacity: 0; } to { opacity: 1; } }
@keyframes move-left-header { from { margin-right: -1vw; } to { margin-right: 0; } }
@keyframes move-down-header { from { top: -$float-height; } to { top: 0; } }

// Codes
header#top {
    @include full;
    position: relative;
    box-shadow: 0 0 10px $black-t;
    margin-bottom: 1.1rem;

    %controlable {
        @include above;
        margin: 0;

        @include vt-power (top, $vt-padding);
        @include vt-power (height, $control-height);
    }

    &.float {
        %controlable { animation: fade-in-header 1s ease, move-left-header .7s ease; }

        .identity {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: $float-height - 2 * $float-padding;
            background-color: $dblue-lt;
            box-shadow: 0 0 5px $black-t;
            padding-top: $float-padding;
            padding-bottom: $float-padding;
            animation: move-down-header 1s cubic-bezier(.03,.83,.22,.98) !important;
            opacity: 1;

            img { max-height: $float-height - 2 * $float-padding; }

            .normal { @include hide; }
            .float { @include show; }

            @include decr (padding-left, $hz-padding);
            @include decr (padding-right, $hz-padding);
        }

        .navigator {
            position: fixed;
            top: 0;
            height: $float-height;

            & > ul {
                margin: 0;

                & > li {
                    height: $float-height;
                    margin: 0;

                    & > a {
                        display: block;
                        height: $menu-font-size;
                        line-height: $menu-font-size;
                        padding: calc(#{$float-height / 2} - #{$menu-font-size / 2}) 1.5vw;
                        border-radius: 0 !important;
                    }

                    & > ul {
                        top: $float-height;
                        border-top-right-radius: 0;
                        margin: 0;
                    }
                }
            }
        }

        .button-box {
            position: fixed;
            top: 0;

            button {
                margin-top: $float-height / 2 - $button-each-width / 2 - 1px;
            }
        }
    }

    a, h1, p, span, img { color: white; }

    .identity {
        @extend %controlable;

        img { height: 100%; }

        .float { @include hide; }

        @include decr (left, $hz-padding);
    }

    .navigator {
        @extend %controlable;
        padding-right: $button-box-width + 10px;

        a { margin: 0; }
        ul { list-style: none; }
        ul, li { margin: 0; padding: 0; }

        & > ul {
            & > li {
                position: relative;
                display: inline-block;
                margin: 0 ($menu-padding / 2);

                &:hover, &:active, &:focus, &:focus-within {
                    & > a {
                        background-color: $dblue-lt;
                        box-shadow: 0 0 5px $black-t;
                    }
                    & > ul { @include show(opacity); }
                }

                ul {
                    border-top-right-radius: $menu-vertical-padding / 2;
                    border-bottom-left-radius: $menu-vertical-padding / 2;
                    border-bottom-right-radius: $menu-vertical-padding / 2;
                    box-shadow: 0 0 5px $black-t;
                }

                & > a {
                    position: relative;
                    font-size: $menu-font-size;
                    transition: background-color .2s, box-shadow .2s;
                    padding: $menu-vertical-padding 1vw;
                    border-top-left-radius: $menu-vertical-padding / 2;
                    border-top-right-radius: $menu-vertical-padding / 2;
                    z-index: 35;
                }

                & > a:only-child {
                    border-bottom-left-radius: $menu-vertical-padding / 2;
                    border-bottom-right-radius: $menu-vertical-padding / 2;
                }

                & > ul {
                    @include hide(opacity);
                    @include max-content;
                    position: absolute;
                    top: auto;
                    left: 0;
                    min-width: 12rem;
                    padding: #{$menu-inner-padding * 3 / 4} 0 #{$menu-inner-padding / 3};
                    background-color: $dblue-lt;
                    font-size: $menu-font-size;
                    margin-top: $menu-vertical-padding;
                    transition: opacity .2s;
                    z-index: 30;

                    & > li {
                        position: relative;

                        &:hover, &:active, &:focus, &:focus-within {
                            & > ul {
                                @include show(opacity);
                            }
                            & > a {
                                color: $dblue;
                                background-color: white;
                            }
                        }

                        & > a {
                            @include no-underline;
                            position: relative;
                            padding: #{$menu-inner-padding / 4} 3.5rem #{$menu-inner-padding / 4} #{$menu-inner-padding};
                            font-size: $menu-inner-font-size;
                            font-weight: 500;
                            display: block;
                            height: calc(#{$menu-inner-font-size} + #{$menu-inner-padding / 2});
                            line-height: calc(#{$menu-inner-font-size} + #{$menu-inner-padding / 2});
                            z-index: 30;
                            transition: background-color .1s, color .1s;
                        }

                        & > ul {
                            @include hide(opacity);
                            @include max-content;
                            position: absolute;
                            background-color: white;
                            top: 0;
                            left: 100%;
                            min-height: calc(100% - #{$menu-inner-padding * 2});
                            min-width: 13rem;
                            padding: $menu-inner-padding / 1.5;
                            z-index: 25;
                            transition: opacity .2s;

                            & > li > a {
                                color: $dblue;
                                font-size: $menu-inner-font-size;
                                font-weight: 400;
                                line-height: 2rem;
                            }
                        }
                    }
                }
            }

            @include vt-power(margin-top, $control-height / 2, $fixed: 0px - #{$menu-font-size / 2} - #{$menu-vertical-padding / 2}, $calc: true);
        }

        & > .close { @include hide; }

        @include decr (right, $hz-padding);
        @include under(s) {
            @include hide(opacity);
            position: fixed;
            width: 100%;
            height: 100%;
            top: 0;
            left: 0;
            z-index: 40;
            transition: opacity .2s;
            background-color: $black-lt;

            &:target { @include show(opacity); }

            & > .close {
                @include show;
                width: $button-each-width;
                height: $button-each-width;
                color: white;
            }

            & > ul {
                background-color: $dblue-t;
                width: 480px;
                max-width: 96vw;
                margin: auto;

                & > li {
                    display: block;

                    & > ul {
                        position: relative;

                        & > li {
                            & > ul {
                                position: relative;
                                @include show(opacity);
                            }
                        }

                        @include show(opacity);
                    }
                }
            }
        }
        @include when(xxxl) {
            // NOTE
            // 7.5em = Expand Menu + Search & 메뉴 펼치기 + 검색
            // 10px = 5px is added to both side of the box when the labels are exposed.
            padding-right: calc(#{$button-box-width} + #{$menu-padding} + 7.5em + 10px);
        }
    }

    .button-box {
        @extend %controlable;
        display: table;
        font-size: 0;

        button {
            @include button-engraved (white, $dblue);
            display: table-cell;
            width: $button-each-width;
            height: $button-each-width;
            font-size: $button-font-size;
            line-height: $button-each-width;
            vertical-align: top;
            border-collapse: collapse;

            @mixin button-radius ($direction) {
                padding-#{$direction}: $button-each-width * ($button-radius-range - 1) * .5;
                width: $button-each-width * $button-radius-range;
                border-top-#{$direction}-radius: #{$button-each-width / 2};
                border-bottom-#{$direction}-radius: #{$button-each-width / 2};
            }

            @mixin expand {
                width: initial !important;

                a {
                    svg, img { padding-left: 12px; }
                    span { padding-right: 12px; }
                }
            }

            a {
                @include no-underline;

                svg, img {
                    width: $button-each-width - 15px;
                    height: $button-each-width - 15px;

                    &:not(.no-label) { padding: 7px; }
                }

                span {
                    line-height: $button-each-width - 2px;
                    vertical-align: top;
                    margin: 0;
                }
            }

            &:first-child { @include button-radius(left); }
            &:last-child { @include button-radius(right); }

            @include when(xxs) {
                @include button-embossed(white, $dblue, transparent);
            }
            @include when(xs, s, xxxl) { @include expand; }
            @include over(m) {
                &.search { @include button-radius(right); }
            }
            @include vt-power (margin-top, $control-height / 2, -$button-width / 2);
        }

        .expand {
            @include under(s) { @include hide; }
        }

        .menu {
            @include hide;
            @include under(s) { @include show; }
        }

        @include decr (right, $hz-padding);
    }

    .slider {
        @include below;
        @include full;
        top: 0;
        left: 0;
        display: inline-grid;

        .slide {
            @include full;
            position: absolute;
            background-position: 50% 40%;
            background-repeat: no-repeat;
            background-size: cover;

            &::before {
                @include below;
                @include full;
                top: 0;
                left: 0;
                background-color: $dblue-t;
                content: '';
            }

            .text-box {
                @include above;
                bottom: $vt-padding;

                h1 { margin: 0; }
                a { font-weight: 300; }

                @include vt-power (bottom, $vt-padding);
                @include decr (padding-right, $hz-padding);
                @include decr (padding-left, $hz-padding);
            }
        }
    }
}
